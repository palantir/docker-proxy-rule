buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://dl.bintray.com/palantir/releases"
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-info-plugin:5.2.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:1.12.4'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.palantir.baseline:gradle-baseline-java:2.30.0'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:14.1.1'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.12.2'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.1.0'
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://dl.bintray.com/palantir/releases"
    }
}

apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.git-version'

group = 'com.palantir.docker.proxy'
version gitVersion()


apply plugin: 'java'
apply plugin: 'org.inferred.processors'
apply plugin: 'com.palantir.baseline'


apply from: "${rootDir}/gradle/publish-jar.gradle"


sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile group: 'com.palantir.docker.compose', name: 'docker-compose-rule-junit4'
    compile group: 'junit', name: 'junit'
    compile group: 'one.util', name: 'streamex'

    testCompile group: 'org.assertj', name: 'assertj-core'
    testCompile group: 'org.mockito', name: 'mockito-core'
}

if (System.env.CIRCLE_TEST_REPORTS) {
    test.reports.junitXml.destination = file(System.env.CIRCLE_TEST_REPORTS)
}
