buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://dl.bintray.com/palantir/releases"
        }
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:1.0.1'
        classpath 'com.netflix.nebula:gradle-info-plugin:9.0.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:1.25.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
        classpath 'com.palantir.baseline:gradle-baseline-java:3.37.0'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:17.3.1'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.12.3'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.3.0'
        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:3.0.1'
    }
}

apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.baseline'

allprojects {
    apply plugin: 'com.palantir.java-format'
    group = 'com.palantir.docker.proxy'
    version gitVersion()

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://dl.bintray.com/palantir/releases"
        }
    }
}

configure(subprojects) {
    apply plugin: 'java-library'
    apply plugin: 'org.inferred.processors'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    if (System.env.CIRCLE_TEST_REPORTS) {
        test.reports.junitXml.destination = new File(System.env.CIRCLE_TEST_REPORTS, it.getName())
    }
}
