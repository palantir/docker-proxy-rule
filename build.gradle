buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.5.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:1.1.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.0.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:4.42.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.12.3'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.6.0'
        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:4.0.0'
    }
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.baseline'

allprojects {
    apply plugin: 'com.palantir.java-format'
    group = 'com.palantir.docker.proxy'
    version gitVersion()

    repositories {
        mavenCentral()
        jcenter()
    }
}

configure(subprojects) {
    apply plugin: 'java-library'
    apply plugin: 'org.inferred.processors'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    if (System.env.CIRCLE_TEST_REPORTS) {
        test.reports.junitXml.destination = new File(System.env.CIRCLE_TEST_REPORTS, it.getName())
    }
}
